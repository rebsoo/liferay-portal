definition {

	macro addFieldByDoubleClick {

		var key_fieldType = "${fieldType}";

		DoubleClick(locator1 = "FormViewBuilder#ADD_FIELD_TYPE");

		AssertElementPresent(locator1 = "FormViewBuilder#SIDEBAR_BASIC_TAB");
	}

	macro addFieldByDragAndDrop {

		Pause(locator1 = "10000");

		var key_fieldType = "${fieldType}";

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "FormViewBuilder#ADD_FIELD_TYPE",
			locator2 = "Form#ADD_FIELD_POSITION",
			value1 = "${fieldType}");

		AssertElementPresent(locator1 = "FormViewBuilder#SIDEBAR_BASIC_TAB");
	}

	macro addFieldToObject {
		Click(locator1 = "FormViewBuilder#OBJECT_FIELD_PLUS");

		DoubleClick(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#OBJECT_FIELD_BUTTON_DROPDOWN");

		FormViewBuilder.validateFieldInObject(fieldLabel = "${fieldName}");
	}

	macro addFormView {

		if (IsElementNotPresent(locator1 = "FormViewBuilder#SIDEBAR_FIELDS_TAB") && IsElementPresent(locator1 = "AppBuilder#FORM_VIEW_TAB")) {
			FormViewBuilder.switchToFormViewTab();
			AppBuilderAdmin.add();
		}

		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");

		FormViewBuilder.setName(formViewName = "${formViewName}");

		FormViewBuilder.save();
	}

	macro addFormViewAndValidateFieldLabel {

		FormViewBuilder.addFormView(
			fieldType = "${fieldType}",
			formViewName = "${formViewName}");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "${formViewName}");

		AppBuilderAdmin.openItem(itemName = "${formViewName}");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldType}");

		AppBuilderAdmin.gotoBack();
	}

	macro addFromObjectField {
		var key_fieldName = "${fieldName}";

		DoubleClick(locator1 = "FormViewBuilder#OBJECT_FIELD_NAME");

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldName}");
	}

	macro checkSwitcher {
		Check.checkToggleSwitch(
			key_switcherOption = "${propertyName}",
			locator1 = "FormViewBuilder#SWITCHER_OPTION");
	}

	macro closeSidebar() {
		Click(locator1 = "FormViewBuilder#CLOSE_SIDEBAR");
	}

	macro deselectSelectWithMultipleOptions {
		var key_fieldName = "${fieldName}";

		for (var selectOption : list "${selectOptionsList}") {
			FormViewBuilder.disableCheckbox(fieldName = "${selectOption}");
		}
	}

	macro disableCheckbox {
		if (IsChecked(locator1 = "FormViewBuilder#CHECKBOX", key_fieldName = "${fieldName}")) {
			Click(
				key_fieldName = "${fieldName}",
				locator1 = "FormViewBuilder#CHECKBOX_LABEL");
		}

		FormViewBuilder.viewCheckboxNotChecked(fieldName = "${fieldName}");
	}

	macro editDate {
		Type(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#DATE_FIELD",
			value1 = "${fieldValue}");
	}

	macro editFieldInObject {
		Click(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#OBJECT_FIELD_SEARCH_RESULT");

		FormViewBuilder.setFieldLabel(fieldLabel = "${fieldLabel}");
	}

	macro editOptionsRow {
		var key_rowNumber = "${rowNumber}";

		Type(
			locator1 = "FormViewBuilder#OPTIONS_OPTION_VALUE_FIELD",
			value1 = "${optionValue}");

		AssertElementPresent(locator1 = "FormViewBuilder#OPTIONS_OPTION_NAME_FIELD");
	}

	macro editText {
		Type(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#TEXT_FIELD",
			value1 = "${fieldValue}");
	}

	macro enableCheckbox {
		if (IsNotChecked.isNotCheckedNotVisible(locator1 = "FormViewBuilder#CHECKBOX", key_fieldName = "${fieldName}")) {
			Click(
				key_fieldName = "${fieldName}",
				locator1 = "FormViewBuilder#CHECKBOX_LABEL");
		}

		FormViewBuilder.viewCheckboxChecked(fieldName = "${fieldName}");
	}

	macro enableCheckboxPredefined {
		if (IsNotChecked.isNotCheckedNotVisible(locator1 = "FormViewBuilder#CHECKBOX_PREDEFINED", key_fieldName = "${fieldName}")) {
			Click(
				key_fieldName = "${fieldName}",
				locator1 = "FormViewBuilder#CHECKBOX_PREDEFINED_LIST");
		}

		FormViewBuilder.viewCheckboxChecked(fieldName = "${fieldName}");

		Pause(
			itemName = "${formViewName}",
			locator1 = "1000");
	}

	macro openSidebar() {
		Click(locator1 = "FormViewBuilder#OPEN_SIDEBAR");
	}

	macro save {
		AppBuilderAdmin.save();
	}

	macro searchObjectField {
		Click(locator1 = "FormViewBuilder#OBJECT_FIELD_SEARCH_BUTTON");

		Type(
			locator1 = "FormViewBuilder#OBJECT_FIELD_SEARCH_BOX",
			value1 = "${fieldValue}");
	}

	macro selectRadioOption {
		Click.clickNoMouseOverNoWaitForVisible(
			key_fieldName = "${fieldName}",
			key_radioOption = "${radioOption}",
			locator1 = "FormViewBuilder#RADIO_OPTION_LABEL");
	}

	macro selectSelectOption {
		var key_fieldName = "${fieldName}";
		var key_selectOption = "${selectOption}";

		Click(
			locator1 = "FormViewBuilder#SELECT_FIELD",
			value1 = "${selectOption}");

		Click(
			locator1 = "FormViewBuilder#SELECT_FIELD_OPTIONS_LIST",
			value1 = "${selectOption}");
	}

	macro selectSelectOptionPredefined {
		var key_selectOption = "${selectOption}";

		Click(
			locator1 = "FormViewBuilder#SIDEBAR_ADVANCED_PREDEFINED_SELECT_FROM_LIST",
			value1 = "${selectOption}");

		Click(
			locator1 = "FormViewBuilder#SELECT_FIELD_OPTIONS_LIST",
			value1 = "${selectOption}");

		Pause(locator1 = "1000");
	}

	macro selectSelectWithMultipleOptions {
		var key_fieldName = "${fieldName}";

		for (var selectOption : list "${selectOptionsList}") {
			FormViewBuilder.enableCheckbox(fieldName = "${selectOption}");
		}

		Pause(locator1 = "1000");
	}

	macro selectSelectWithMultipleOptionsPredefined {

		Click(locator1 = "FormViewBuilder#SIDEBAR_ADVANCED_PREDEFINED_SELECT_FROM_LIST");

		var key_fieldName = "${fieldName}";

		for (var selectOption : list "${selectOptionsList}") {
			FormViewBuilder.enableCheckboxPredefined(fieldName = "${selectOption}");
		}

		Pause(locator1 = "1000");
	}

	macro setFieldHelpText {
		var key_fieldType = "tip";
		Type(
			locator1 = "FormViewBuilder#FIELD_LABEL_AT_SIDEBAR",
			value1 = "${fieldLabel}");

		AssertTextEquals(
			locator1 = "FormViewBuilder#FIELD_VALUE",
			value1 = "${fieldLabel}");
	}

	macro setFieldLabel {
		var key_fieldType = "label";
		Type(
			locator1 = "FormViewBuilder#FIELD_LABEL_AT_SIDEBAR",
			value1 = "${fieldLabel}");

		AssertTextEquals(
			locator1 = "FormViewBuilder#FIELD_VALUE",
			value1 = "${fieldLabel}");
	}

	macro setFieldPredefinedDate {
		Type(
			locator1 = "FormViewBuilder#SIDEBAR_ADVANCED_PREDEFINED_DATE",
			value1 = "${fieldValue}");
	}

	macro setFieldPredefinedText {
		Type(
			locator1 = "FormViewBuilder#SIDEBAR_ADVANCED_PREDEFINED_TEXT",
			value1 = "${fieldValue}");
	}

	macro setFieldRequired {
		FormViewBuilder.clickOnSwitcher(propertyName = "required");
	}

	macro setName {

		AppBuilderAdmin.setName(title = "${formViewName}");
	}

	macro switchToAdvancedTab {
		Click(locator1 = "FormViewBuilder#SIDEBAR_ADVANCED_TAB");
	}

	macro switchToFormViewTab {
		AppBuilderAdmin.switchTab(tabName = "Form Views");
	}

	macro validateFieldInObject {
		var key_fieldName = "${fieldLabel}";

		AssertTextEquals(
			locator1 = "FormViewBuilder#OBJECT_FIELD_NAME",
			value1 = "${fieldLabel}");
	}

	macro validateFieldLabel {
		AssertTextEquals(
			locator1 = "FormViewBuilder#FIELD_LABEL",
			value1 = "${fieldLabel}");
	}

	macro validateFieldLabelRequired {
		AssertElementPresent(
			fieldLabel = "${fieldLabel}",
			locator1 = "FormViewBuilder#FIELD_LABEL_REQUIRED");
	}

	macro validateFormMultipleSelectionField {
		var key_fieldType = "${fieldLabel}";

		FormViewBuilder.validateFieldLabel(fieldLabel = "${fieldName}");

		AssertTextEquals(
			locator1 = "FormViewBuilder#FIELD_LABEL_MULTIPLE_SELECTION",
			value1 = "${fieldLabel}");
	}

	macro validatePredefinedMultipleSelection {
		var key_fieldName = "${fieldName}";

		for (var selectOption : list "${selectOptionsList}") {
			FormViewBuilder.viewCheckboxChecked(fieldName = "${selectOption}");
		}
	}

	macro validatePredefinedSelectList {
		var key_fieldName = "${fieldName}";
		var key_fieldValue = "${fieldValue}";

		AssertTextEquals(
			locator1 = "FormViewBuilder#PREDEFINED_VALUE_AT_FORM_SELECTLIST",
			value1 = "${fieldValue}");
	}

	macro validatePredefinedSingleSelection {
		FormViewBuilder.viewSelectChecked(
			fieldName = "${fieldName}",
			fieldValue = "${fieldValue}");
	}

	macro validatePredefinedText {
		var key_fieldName = "${fieldName}";
		var key_fieldValue = "${fieldValue}";

		AssertTextEquals(
			locator1 = "FormViewBuilder#PREDEFINED_VALUE_AT_FORM",
			value1 = "${fieldValue}");
	}

	macro validateSearchResult {
		var key_fieldName = "${fieldLabel}";

		AssertTextEquals(
			locator1 = "FormViewBuilder#OBJECT_FIELD_SEARCH_RESULT",
			value1 = "${fieldLabel}");
	}

	macro validateSelectFromListField {

		var key_rowNumber = "${rowNumber}";

		AssertTextEquals(
			locator1 = "FormViewBuilder#OPTIONS_OPTION_VALUE_FIELD",
			value1 = "${optionValue}");
	}

	macro viewCheckboxChecked {
		AssertChecked.assertCheckedNotVisible(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#CHECKBOX");
	}

	macro viewCheckboxNotChecked {
		AssertNotChecked.assertNotCheckedNotVisible(
			key_fieldName = "${fieldName}",
			locator1 = "FormViewBuilder#CHECKBOX");
	}

	macro viewSelectChecked {
		var key_fieldName = "${fieldName}";
		var key_fieldValue = "${fieldValue}";

		AssertChecked.assertCheckedNotVisible(
			key_fieldName = "${fieldName}",
			key_fieldValue = "${fieldValue}",
			locator1 = "FormViewBuilder#PREDEFINED_VALUE_AT_FORM");
	}

}